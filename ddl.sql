-- MySQL Script generated by MySQL Workbench
-- Fri Apr 25 19:23:14 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Image`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Image` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Image` (
  `Image_id` INT NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `ImageURL` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Image_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Continent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Continent` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Continent` (
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Location` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Location` (
  `Location_id` INT NOT NULL,
  `Address` VARCHAR(45) NOT NULL,
  `Coordinates` GEOMETRY NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  `Country` VARCHAR(45) NOT NULL,
  `Continent_Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Location_id`),
  INDEX `fk_Location_Continent1_idx` (`Continent_Name` ASC) VISIBLE,
  CONSTRAINT `fk_Location_Continent1`
    FOREIGN KEY (`Continent_Name`)
    REFERENCES `mydb`.`Continent` (`Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Festival`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Festival` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Festival` (
  `Festival_id` INT NOT NULL,
  `Year` INT NOT NULL,
  `StartDate` DATETIME NOT NULL,
  `EndDate` DATETIME NOT NULL,
  `Days` INT NOT NULL COMMENT 'μάλλον πλεονασμός γιατί: \nSELECT DATEDIFF(EndDate, StartDate) + 1 AS Days\nFROM Festival\nWHERE FestivalID = 1;\n',
  `Image_Image_id` INT NOT NULL,
  `Location_Location_id` INT NOT NULL,
  PRIMARY KEY (`Festival_id`),
  UNIQUE INDEX `Festival_id_UNIQUE` (`Festival_id` ASC) VISIBLE,
  UNIQUE INDEX `Year_UNIQUE` (`Year` ASC) VISIBLE,
  INDEX `fk_Festival_Image1_idx` (`Image_Image_id` ASC) VISIBLE,
  INDEX `fk_Festival_Location1_idx` (`Location_Location_id` ASC) VISIBLE,
  CONSTRAINT `fk_Festival_Image1`
    FOREIGN KEY (`Image_Image_id`)
    REFERENCES `mydb`.`Image` (`Image_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Festival_Location1`
    FOREIGN KEY (`Location_Location_id`)
    REFERENCES `mydb`.`Location` (`Location_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Stage` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Stage` (
  `Stage_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `MaxCapacity` INT NOT NULL,
  PRIMARY KEY (`Stage_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Event` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Event` (
  `Event_id` INT NOT NULL,
  `Date` DATETIME NOT NULL,
  `Festival_Festival_id` INT NOT NULL,
  `Stage_Stage_id` INT NOT NULL,
  PRIMARY KEY (`Event_id`),
  INDEX `fk_Event_Festival1_idx` (`Festival_Festival_id` ASC) VISIBLE,
  INDEX `fk_Event_Stage1_idx` (`Stage_Stage_id` ASC) VISIBLE,
  CONSTRAINT `fk_Event_Festival1`
    FOREIGN KEY (`Festival_Festival_id`)
    REFERENCES `mydb`.`Festival` (`Festival_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_Event_Stage1`
    FOREIGN KEY (`Stage_Stage_id`)
    REFERENCES `mydb`.`Stage` (`Stage_id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Equipment` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Equipment` (
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Image_Image_id` INT NOT NULL,
  PRIMARY KEY (`Name`),
  INDEX `fk_Equipment_Image1_idx` (`Image_Image_id` ASC) VISIBLE,
  CONSTRAINT `fk_Equipment_Image1`
    FOREIGN KEY (`Image_Image_id`)
    REFERENCES `mydb`.`Image` (`Image_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Role` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Role` (
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Experience`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Experience` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Experience` (
  `Level` INT NOT NULL,
  `Level_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Level`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Staff`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Staff` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Staff` (
  `Staff_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Age` INT NOT NULL,
  `Role_Name` VARCHAR(45) NOT NULL,
  `Experience_Level` INT NOT NULL,
  PRIMARY KEY (`Staff_id`),
  INDEX `fk_Staff_Role1_idx` (`Role_Name` ASC) VISIBLE,
  INDEX `fk_Staff_Experience1_idx` (`Experience_Level` ASC) VISIBLE,
  CONSTRAINT `fk_Staff_Role1`
    FOREIGN KEY (`Role_Name`)
    REFERENCES `mydb`.`Role` (`Name`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Staff_Experience1`
    FOREIGN KEY (`Experience_Level`)
    REFERENCES `mydb`.`Experience` (`Level`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Performer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Performer` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Performer` (
  `Performer_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `FormationDate` DATETIME NULL,
  `Website` VARCHAR(45) NULL,
  `InstagramProfile` VARCHAR(45) NULL,
  PRIMARY KEY (`Performer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Performance_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Performance_type` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Performance_type` (
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Performance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Performance` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Performance` (
  `Performance_id` INT NOT NULL,
  `StartTime` DATETIME NOT NULL,
  `Duration` INT NOT NULL,
  `BreakDuration` INT NOT NULL COMMENT 'υποχρεωτικά διάλειμμα, ελάχιστης διάρκειας 5 λεπτών και μέγιστης 30 λεπτών',
  `Performer_id` INT NOT NULL COMMENT 'θα προσθεσουμε το constraint για διασφάλιση οτι μια εμφανιση γινεται υποχρεωτικα ειτε απο εναν artist (solo) ειτε απο ενα band:\n\nALTER TABLE Performance\nADD CONSTRAINT chk_Performance_Artist_Band\nCHECK (\n  (Band_id IS NOT NULL AND Artist_id IS NULL)\n  OR\n  (Band_id IS NULL AND Artist_id IS NOT NULL)\n);\n ',
  `Event_Event_id` INT NOT NULL,
  `Performance_type_Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Performance_id`),
  INDEX `fk_Performance_Band1_idx` (`Performer_id` ASC) VISIBLE,
  INDEX `fk_Performance_Event1_idx` (`Event_Event_id` ASC) VISIBLE,
  INDEX `fk_Performance_Performance_type1_idx` (`Performance_type_Type` ASC) VISIBLE,
  CONSTRAINT `fk_Performance_Band1`
    FOREIGN KEY (`Performer_id`)
    REFERENCES `mydb`.`Performer` (`Performer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Performance_Event1`
    FOREIGN KEY (`Event_Event_id`)
    REFERENCES `mydb`.`Event` (`Event_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Performance_Performance_type1`
    FOREIGN KEY (`Performance_type_Type`)
    REFERENCES `mydb`.`Performance_type` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Artist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Artist` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Artist` (
  `Artist_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `StageName` VARCHAR(45) NULL,
  `BirthDate` DATETIME NOT NULL,
  `Website` VARCHAR(45) NULL,
  `Image_Image_id` INT NOT NULL,
  PRIMARY KEY (`Artist_id`),
  INDEX `fk_Artist_Image1_idx` (`Image_Image_id` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_Image1`
    FOREIGN KEY (`Image_Image_id`)
    REFERENCES `mydb`.`Image` (`Image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Visitor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Visitor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Visitor` (
  `Visitor_id` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Age` INT NOT NULL,
  `ContactInfo` VARCHAR(100) NOT NULL COMMENT 'π.χ. email, τηλέφωνο',
  PRIMARY KEY (`Visitor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Artist_has_Performer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Artist_has_Performer` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Artist_has_Performer` (
  `Artist_Artist_id` INT NOT NULL,
  `Performer_Performer_id` INT NOT NULL,
  PRIMARY KEY (`Artist_Artist_id`, `Performer_Performer_id`),
  INDEX `fk_Artist_has_Band_Band1_idx` (`Performer_Performer_id` ASC) VISIBLE,
  INDEX `fk_Artist_has_Band_Artist_idx` (`Artist_Artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_Artist_has_Band_Artist`
    FOREIGN KEY (`Artist_Artist_id`)
    REFERENCES `mydb`.`Artist` (`Artist_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Artist_has_Band_Band1`
    FOREIGN KEY (`Performer_Performer_id`)
    REFERENCES `mydb`.`Performer` (`Performer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ticket_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Ticket_type` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Ticket_type` (
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Payment_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Payment_method` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Payment_method` (
  `Method` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Method`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Ticket` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Ticket` (
  `Ticket_id` INT NOT NULL,
  `PurchaseDate` DATETIME NOT NULL,
  `Price` DECIMAL(5,2) NOT NULL,
  `EANCode` VARCHAR(45) NOT NULL,
  `IsActive` TINYINT(1) NOT NULL COMMENT 'π.χ. ενεργοποιημένο (χρησιμοποιημένο ή όχι)',
  `Event_Event_id` INT NOT NULL,
  `Visitor_Visitor_id` INT NOT NULL COMMENT 'θα προσθέσουμε constraint για να αποτρέψουμε έναν επισκέπτη να αγοράσει πάνω από 1 εισιτήριο για την ίδια παράσταση και ημέρα:\n\n\nCREATE TRIGGER trg_Ticket_UniquePerDay\nBEFORE INSERT ON Ticket\nFOR EACH ROW\nBEGIN\n    IF (SELECT COUNT(*) FROM Ticket \n        WHERE Visitor_id = NEW.Visitor_id \n        AND Event_id = NEW.Event_id) > 0 THEN\n        SIGNAL SQLSTATE \'45000\'\n        SET MESSAGE_TEXT = \'A visitor can only buy one ticket per event per day.\';\n    END IF;\nEND;\n',
  `Ticket_type_Type` VARCHAR(45) NOT NULL,
  `Payment_method_Method` VARCHAR(45) NOT NULL,
  `Seller_id` INT NULL,
  PRIMARY KEY (`Ticket_id`),
  INDEX `fk_Ticket_Event1_idx` (`Event_Event_id` ASC) VISIBLE,
  INDEX `fk_Ticket_Visitor1_idx` (`Visitor_Visitor_id` ASC) VISIBLE,
  INDEX `fk_Ticket_Ticket_type1_idx` (`Ticket_type_Type` ASC) VISIBLE,
  INDEX `fk_Ticket_Payment_method1_idx` (`Payment_method_Method` ASC) VISIBLE,
  INDEX `fk_Ticket_Visitor2_idx` (`Seller_id` ASC) VISIBLE,
  CONSTRAINT `fk_Ticket_Event1`
    FOREIGN KEY (`Event_Event_id`)
    REFERENCES `mydb`.`Event` (`Event_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Ticket_Visitor1`
    FOREIGN KEY (`Visitor_Visitor_id`)
    REFERENCES `mydb`.`Visitor` (`Visitor_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Ticket_Ticket_type1`
    FOREIGN KEY (`Ticket_type_Type`)
    REFERENCES `mydb`.`Ticket_type` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Ticket_Payment_method1`
    FOREIGN KEY (`Payment_method_Method`)
    REFERENCES `mydb`.`Payment_method` (`Method`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Ticket_Visitor2`
    FOREIGN KEY (`Seller_id`)
    REFERENCES `mydb`.`Visitor` (`Visitor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ResaleQueue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ResaleQueue` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ResaleQueue` (
  `timestamp` DATETIME NOT NULL,
  `Ticket_Ticket_id` INT NOT NULL,
  INDEX `fk_ResaleQueue_Ticket1_idx` (`Ticket_Ticket_id` ASC) VISIBLE,
  PRIMARY KEY (`Ticket_Ticket_id`),
  CONSTRAINT `fk_ResaleQueue_Ticket1`
    FOREIGN KEY (`Ticket_Ticket_id`)
    REFERENCES `mydb`.`Ticket` (`Ticket_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Likert`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Likert` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Likert` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Rating` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Rating` (
  `Rating_id` INT NOT NULL,
  `ArtistPerformance` INT NOT NULL,
  `SoundAndLighting` INT NOT NULL,
  `StagePresence` INT NOT NULL,
  `Organization` INT NOT NULL,
  `OverallImpression` INT NOT NULL,
  `Visitor_Visitor_id` INT NOT NULL,
  `Performance_Performance_id` INT NOT NULL,
  PRIMARY KEY (`Rating_id`),
  INDEX `fk_Rating_Visitor1_idx` (`Visitor_Visitor_id` ASC) VISIBLE,
  INDEX `fk_Rating_Performance1_idx` (`Performance_Performance_id` ASC) VISIBLE,
  INDEX `fk_Rating_Likert1_idx` (`ArtistPerformance` ASC) VISIBLE,
  INDEX `fk_Rating_Likert2_idx` (`SoundAndLighting` ASC) VISIBLE,
  INDEX `fk_Rating_Likert3_idx` (`StagePresence` ASC) VISIBLE,
  INDEX `fk_Rating_Likert4_idx` (`Organization` ASC) VISIBLE,
  INDEX `fk_Rating_Likert5_idx` (`OverallImpression` ASC) VISIBLE,
  CONSTRAINT `fk_Rating_Visitor1`
    FOREIGN KEY (`Visitor_Visitor_id`)
    REFERENCES `mydb`.`Visitor` (`Visitor_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Performance1`
    FOREIGN KEY (`Performance_Performance_id`)
    REFERENCES `mydb`.`Performance` (`Performance_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Likert1`
    FOREIGN KEY (`ArtistPerformance`)
    REFERENCES `mydb`.`Likert` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Likert2`
    FOREIGN KEY (`SoundAndLighting`)
    REFERENCES `mydb`.`Likert` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Likert3`
    FOREIGN KEY (`StagePresence`)
    REFERENCES `mydb`.`Likert` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Likert4`
    FOREIGN KEY (`Organization`)
    REFERENCES `mydb`.`Likert` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Rating_Likert5`
    FOREIGN KEY (`OverallImpression`)
    REFERENCES `mydb`.`Likert` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event_has_Staff`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Event_has_Staff` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Event_has_Staff` (
  `Event_Event_id` INT NOT NULL,
  `Staff_Staff_id` INT NOT NULL,
  PRIMARY KEY (`Event_Event_id`, `Staff_Staff_id`),
  INDEX `fk_Event_has_Staff_Staff1_idx` (`Staff_Staff_id` ASC) VISIBLE,
  INDEX `fk_Event_has_Staff_Event1_idx` (`Event_Event_id` ASC) VISIBLE,
  CONSTRAINT `fk_Event_has_Staff_Event1`
    FOREIGN KEY (`Event_Event_id`)
    REFERENCES `mydb`.`Event` (`Event_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Event_has_Staff_Staff1`
    FOREIGN KEY (`Staff_Staff_id`)
    REFERENCES `mydb`.`Staff` (`Staff_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Genre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Genre` (
  `Genre_id` INT NOT NULL,
  PRIMARY KEY (`Genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Subgenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Subgenre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Subgenre` (
  `Subgenre_id` INT NOT NULL,
  `Genre_Genre_id` INT NOT NULL,
  PRIMARY KEY (`Subgenre_id`),
  INDEX `fk_Subgenre_Genre1_idx` (`Genre_Genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_Subgenre_Genre1`
    FOREIGN KEY (`Genre_Genre_id`)
    REFERENCES `mydb`.`Genre` (`Genre_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Performer_has_Subgenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Performer_has_Subgenre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Performer_has_Subgenre` (
  `Performer_Performer_id` INT NOT NULL,
  `Subgenre_Subgenre_id` INT NOT NULL,
  PRIMARY KEY (`Performer_Performer_id`, `Subgenre_Subgenre_id`),
  INDEX `fk_Performer_has_Subgenre_Subgenre1_idx` (`Subgenre_Subgenre_id` ASC) VISIBLE,
  INDEX `fk_Performer_has_Subgenre_Performer1_idx` (`Performer_Performer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Performer_has_Subgenre_Performer1`
    FOREIGN KEY (`Performer_Performer_id`)
    REFERENCES `mydb`.`Performer` (`Performer_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Performer_has_Subgenre_Subgenre1`
    FOREIGN KEY (`Subgenre_Subgenre_id`)
    REFERENCES `mydb`.`Subgenre` (`Subgenre_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stage_has_Equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Stage_has_Equipment` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Stage_has_Equipment` (
  `Stage_Stage_id` INT NOT NULL,
  `Equipment_Name` VARCHAR(45) NOT NULL,
  `Quantity` INT NOT NULL,
  PRIMARY KEY (`Stage_Stage_id`, `Equipment_Name`),
  INDEX `fk_Stage_has_Equipment_Equipment1_idx` (`Equipment_Name` ASC) VISIBLE,
  INDEX `fk_Stage_has_Equipment_Stage1_idx` (`Stage_Stage_id` ASC) VISIBLE,
  CONSTRAINT `fk_Stage_has_Equipment_Stage1`
    FOREIGN KEY (`Stage_Stage_id`)
    REFERENCES `mydb`.`Stage` (`Stage_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Stage_has_Equipment_Equipment1`
    FOREIGN KEY (`Equipment_Name`)
    REFERENCES `mydb`.`Equipment` (`Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Visitor_wants_Ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Visitor_wants_Ticket` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Visitor_wants_Ticket` (
  `id` INT NOT NULL,
  `Visitor_id` INT NOT NULL,
  `Ticket_id` INT NULL,
  `Event_id` INT NULL,
  `Ticket_Type` VARCHAR(45) NULL,
  `timestamp` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Visitor_has_Ticket_Ticket1_idx` (`Ticket_id` ASC) VISIBLE,
  INDEX `fk_Visitor_has_Ticket_Visitor1_idx` (`Visitor_id` ASC) VISIBLE,
  INDEX `fk_Visitor_wants_Ticket_Event1_idx` (`Event_id` ASC) VISIBLE,
  INDEX `fk_Visitor_wants_Ticket_Ticket_type1_idx` (`Ticket_Type` ASC) VISIBLE,
  CONSTRAINT `fk_Visitor_has_Ticket_Visitor1`
    FOREIGN KEY (`Visitor_id`)
    REFERENCES `mydb`.`Visitor` (`Visitor_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Visitor_has_Ticket_Ticket1`
    FOREIGN KEY (`Ticket_id`)
    REFERENCES `mydb`.`Ticket` (`Ticket_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Visitor_wants_Ticket_Event1`
    FOREIGN KEY (`Event_id`)
    REFERENCES `mydb`.`Event` (`Event_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Visitor_wants_Ticket_Ticket_type1`
    FOREIGN KEY (`Ticket_Type`)
    REFERENCES `mydb`.`Ticket_type` (`Type`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



